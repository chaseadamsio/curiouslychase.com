---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import { ShareLinkOnTwitter } from "../components/ShareOnTwitter";
import { SITE_URL } from "../consts";
import generateTOC from "../utils/generateTOC";
import BaseLayout from "./BaseLayout.astro";
import TableOfContents from "../components/TableOfContents/TableOfContents";
import PageHeading from "../components/PageHeading.astro";
import { isBefore, parseISO } from "date-fns";

type Props = CollectionEntry<"posts">["data"];

const {
	frontmatter: {
		title,
		description,
		image,
		pubDate,
		updatedDate,
		heroImage,
		slug,
	},
	headings = [],
} = Astro.props;

const permalink = `${SITE_URL}/posts/${slug}/`;
---

<BaseLayout title={title} description={description} image={image}>
	<article>
		{heroImage && <img width={720} height={360} src={heroImage} alt="" />}
		<div class="lg:w-8/12">
			<PageHeading>{title}</PageHeading>
			<div class="pt-4 text-xs flex flex-row gap-4 font-mono">
				{
					pubDate && (
						<div>
							Published on <FormattedDate date={pubDate} />
						</div>
					)
				}
				{
					updatedDate && isBefore(parseISO(pubDate), parseISO(updatedDate)) && (
						<div>
							Last updated on <FormattedDate date={updatedDate} />
						</div>
					)
				}
			</div>
			<div class="pt-2">
				<ShareLinkOnTwitter client:load title={title} permalink={permalink} />
			</div>
			<hr class="mt-4 pb-8 border-slate-200 dark:border-slate-800" />
		</div>
		<div class="flex flex-col gap-8 lg:flex-row-reverse lg:gap-12">
			<nav class="lg:sticky lg:self-start lg:top-4 text-md lg:w-4/12">
				<TableOfContents
					labels={{ onThisPage: "Table of Contents" }}
					toc={generateTOC(headings)}
				/>
			</nav>
			<div class="article w-full lg:w-8/12 prose-xl">
				<slot />
			</div>
		</div>
	</article>
	<ShareLinkOnTwitter client:load title={title} permalink={permalink} />
</BaseLayout>
