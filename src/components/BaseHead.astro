---
import "@fontsource/jetbrains-mono";
import "@fontsource/public-sans";
import "@fontsource/public-sans/400.css";
import "@fontsource/public-sans/400-italic.css";
import "@fontsource/public-sans/700.css";
import "@fontsource/public-sans/700-italic.css";
import "@fontsource/public-sans/800.css";
import "@fontsource/public-sans/800-italic.css";
import "@fontsource/public-sans/900.css";
import "@fontsource/public-sans/900-italic.css";

// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../styles/global.css";

import "../styles/prism-github-dark.css";

import "../styles/custom-code.css";

const IS_DEV = !!import.meta.env.DEV;

console.log(import.meta.env.DEV);

export interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = "/placeholder-social.jpg" } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon-128x128.png" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script
	type="text/partytown"
	async
	src="https://www.googletagmanager.com/gtag/js?id=G-EPXF24DJ86"></script>

<script type="text/partytown">
window.dataLayer = window.dataLayer || [];

function gtag() {
	window.dataLayer.push(arguments);
}
if (!IS_DEV) {
	gtag("js", new Date());
	gtag("config", "G-EPXF24DJ86");
}
</script>

<script type="text/partytown">
!(function (t, e) {
	var o, n, p, r;
	e.__SV ||
		((window.posthog = e),
			(e._i = []),
			(e.init = function (i, s, a) {
				function g(t, e) {
					var o = e.split(".");
					2 == o.length && ((t = t[o[0]]), (e = o[1])),
						(t[e] = function () {
							t.push([e].concat(Array.prototype.slice.call(arguments, 0)));
						});
				}
				((p = t.createElement("script")).type = "text/javascript"),
					(p.async = !0),
					(p.src = s.api_host + "/static/array.js"),
					(r = t.getElementsByTagName("script")[0]).parentNode.insertBefore(
						p,
						r
					);
				var u = e;
				for (
					void 0 !== a ? (u = e[a] = []) : (a = "posthog"),
					u.people = u.people || [],
					u.toString = function (t) {
						var e = "posthog";
						return (
							"posthog" !== a && (e += "." + a), t || (e += " (stub)"), e
						);
					},
					u.people.toString = function () {
						return u.toString(1) + ".people (stub)";
					},
					o =
					"capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags".split(
						" "
					),
					n = 0;
					n < o.length;
					n++
				)
					g(u, o[n]);
				e._i.push([i, s, a]);
			}),
			(e.__SV = 1));
})(document, window.posthog || []);
if (!IS_DEV) {
	posthog.init("phc_tI9exCHyiVIHBZw0UpaU1AQvatZCnJ26BzeBsH6Iwl5", {
		api_host: "https://app.posthog.com",
	});
}
</script>
